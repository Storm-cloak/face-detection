{"ast":null,"code":"var _jsxFileName = \"/home/rustam/SCK/WebProgramming/React/smart-brain/face-detection-front/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/navigation/navigation.component\";\nimport ImageLinkForm from \"./components/imagelinkform/imagelinkform.component\";\nimport Rank from \"./components/Rank/rank.component\";\nimport Particles from \"react-particles-js\";\nimport FaceRecognition from \"./components/facerecognition/facerecognition.component\";\nimport SignInForm from \"./components/SignIn/Signin.component\";\nimport RegisterForm from \"./components/Register/register.component\";\nimport { particleOptions } from \"./utils/particleOptions\";\nimport Clarifai from \"clarifai\";\nexport const app = new Clarifai.App({\n  apiKey: \"efb6075a363c4122a5b836470ef61a3f\"\n});\nconst INITIAL_STATE = {\n  id: \"\",\n  name: \"\",\n  email: \"\",\n  entries: 0,\n  joined: \"\"\n};\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [boxes, setBoxes] = useState([]);\n  const [route, setRoute] = useState(\"\");\n  const [isSignedIn, setSignedIn] = useState(false);\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  });\n\n  const loadUser = data => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    });\n  };\n\n  const calculateFaceLocation = data => {\n    const clarifaiFace = data.outputs[0].data.regions;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const boxes = clarifaiFace.map(el => el.region_info.bounding_box).map(elem => {\n      return {\n        leftCol: elem.left_col * width,\n        topRow: elem.top_row * height,\n        rightCol: width - elem.right_col * width,\n        bottomRow: height - elem.bottom_row * height\n      };\n    });\n    return boxes;\n  };\n\n  const displayFaceBox = boxes => {\n    setBoxes(boxes);\n  };\n\n  const onInputChange = event => {\n    setInput(event.target.value);\n  };\n\n  const onButtonSubmit = event => {\n    event.preventDefault();\n    setImageUrl(input);\n    app.models.predict(\"e15d0f873e66047e579f90cf82c9882z\", [input]).then(response => {\n      if (response) {\n        fetch(\"http://localhost:3001/image\", {\n          method: \"put\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: user.id\n          })\n        }).then(response => response.json()).then(count => {\n          setUser({ ...user,\n            entries: count\n          });\n        });\n      }\n\n      displayFaceBox(calculateFaceLocation(response));\n    }).catch(err => console.log(err));\n  };\n\n  const onRouteChange = route => {\n    if (route === \"signout\") {\n      setInput(\"\");\n      setImageUrl(\"\");\n      setUser({});\n      setSignedIn(false);\n    } else if (route === \"home\") {\n      setSignedIn(true);\n    }\n\n    setRoute(route);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Particles, {\n    className: \"particles\",\n    params: particleOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Navigation, {\n    isSignedIn: isSignedIn,\n    onRouteChange: onRouteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), route === \"home\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Rank, {\n    name: user.name,\n    entries: user.entries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n    onInputChange: onInputChange,\n    onButtonSubmit: onButtonSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FaceRecognition, {\n    boxes: boxes,\n    imageUrl: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })) : route === \"register\" ? /*#__PURE__*/React.createElement(RegisterForm, {\n    loadUser: loadUser,\n    onRouteChange: onRouteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(SignInForm, {\n    loadUser: loadUser,\n    onRouteChange: onRouteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rustam/SCK/WebProgramming/React/smart-brain/face-detection-front/src/App.js"],"names":["React","useState","Navigation","ImageLinkForm","Rank","Particles","FaceRecognition","SignInForm","RegisterForm","particleOptions","Clarifai","app","App","apiKey","INITIAL_STATE","id","name","email","entries","joined","input","setInput","imageUrl","setImageUrl","boxes","setBoxes","route","setRoute","isSignedIn","setSignedIn","user","setUser","loadUser","data","calculateFaceLocation","clarifaiFace","outputs","regions","image","document","getElementById","width","Number","height","map","el","region_info","bounding_box","elem","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","preventDefault","models","predict","then","response","fetch","method","headers","body","JSON","stringify","json","count","catch","err","console","log","onRouteChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/navigation/navigation.component\";\nimport ImageLinkForm from \"./components/imagelinkform/imagelinkform.component\";\nimport Rank from \"./components/Rank/rank.component\";\nimport Particles from \"react-particles-js\";\nimport FaceRecognition from \"./components/facerecognition/facerecognition.component\";\nimport SignInForm from \"./components/SignIn/Signin.component\";\nimport RegisterForm from \"./components/Register/register.component\";\nimport { particleOptions } from \"./utils/particleOptions\";\n\nimport Clarifai from \"clarifai\";\n\nexport const app = new Clarifai.App({\n  apiKey: \"efb6075a363c4122a5b836470ef61a3f\",\n});\n\nconst INITIAL_STATE = {\n  id: \"\",\n  name: \"\",\n  email: \"\",\n  entries: 0,\n  joined: \"\",\n};\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [boxes, setBoxes] = useState([]);\n  const [route, setRoute] = useState(\"\");\n  const [isSignedIn, setSignedIn] = useState(false);\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  });\n\n  const loadUser = (data) => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    });\n  };\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const boxes = clarifaiFace\n      .map((el) => el.region_info.bounding_box)\n      .map((elem) => {\n        return {\n          leftCol: elem.left_col * width,\n          topRow: elem.top_row * height,\n          rightCol: width - elem.right_col * width,\n          bottomRow: height - elem.bottom_row * height,\n        };\n      });\n    return boxes;\n  };\n\n  const displayFaceBox = (boxes) => {\n    setBoxes(boxes);\n  };\n  const onInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const onButtonSubmit = (event) => {\n    event.preventDefault();\n    setImageUrl(input);\n    app.models\n      .predict(\"e15d0f873e66047e579f90cf82c9882z\", [input])\n      .then((response) => {\n        if (response) {\n          fetch(\"http://localhost:3001/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              setUser({ ...user, entries: count });\n            });\n        }\n        displayFaceBox(calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n  const onRouteChange = (route) => {\n    if (route === \"signout\") {\n      setInput(\"\");\n      setImageUrl(\"\");\n      setUser({});\n      setSignedIn(false);\n    } else if (route === \"home\") {\n      setSignedIn(true);\n    }\n    setRoute(route);\n  };\n\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\" params={particleOptions} />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={onRouteChange} />\n      {route === \"home\" ? (\n        <>\n          <Rank name={user.name} entries={user.entries} />\n          <ImageLinkForm\n            onInputChange={onInputChange}\n            onButtonSubmit={onButtonSubmit}\n          />\n          <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\n        </>\n      ) : route === \"register\" ? (\n        <RegisterForm\n          loadUser={loadUser}\n          onRouteChange={onRouteChange}\n        ></RegisterForm>\n      ) : (\n        <SignInForm\n          loadUser={loadUser}\n          onRouteChange={onRouteChange}\n        ></SignInForm>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}